- any_issue_links = errs.any?{|e| e.issue_link.present? && e.issue_link != 'pending' }
=form_tag({}, :id => 'app-errors') do

  %table.errs.selectable.table.table-striped.table-bordered
    %caption
      %h3 Errors
    %thead
      %tr
        %th= check_box_tag "toggle_problems_checkboxes"
        %th= link_for_sort "App"
        %th= link_for_sort "What &amp; Where".html_safe, "message"
        %th= link_for_sort "Latest", "last_notice_at"
        %th= link_for_sort "Deploy", "last_deploy_at"
        %th= link_for_sort "Count"
        - if any_issue_links
          %th Issue
        %th Resolve

    %tbody
      - errs.each do |problem|

        %tr{:class => problem.resolved? ? 'resolved' : 'unresolved'}
          %td.select
            = check_box_tag "problems[]", problem.id, @selected_problems.member?(problem.id.to_s)

          %td.app
            = link_to problem.app.name, app_path(problem.app)
            %br
            - if current_page?(:controller => 'errs')
              %span.environment.label.label-inverse
                = link_to problem.environment, errs_path(:environment => problem.environment)
            - else
              %span.environment.label.label-inverse
                = link_to problem.environment, app_path(problem.app, :environment => problem.environment)

          %td.message
            = link_to truncated_err_message(problem), app_err_path(problem.app, problem)
            %em= problem.where
            - if problem.comments_count > 0
              - comment = problem.comments.last
              %br
              .inline_comment
                - if comment.user
                  %em.commenter= (Errbit::Config.user_has_username ? comment.user.username : comment.user.email).to_s << ":"
                %em= truncate(comment.body, :length => 100, :separator => ' ')

          %td.latest
            #{time_ago_in_words(last_notice_at problem)} ago

          %td.deploy
            =problem.last_deploy_at ? problem.last_deploy_at.to_s(:micro) : 'n/a'

          %td.count
            -if problem.notices_count > 0
              %a{ :class => 'badge badge-important', :href => app_err_path(problem.app, problem) }
                =problem.notices_count
            -else
              -if problem.unresolved?
                %a{ :class => 'badge badge-warning', :href => app_err_path(problem.app, problem) }
                  =problem.notices_count
              -else
                %a{ :class => 'badge badge-success', :href => app_err_path(problem.app, problem) }
                  =problem.notices_count

          - if any_issue_links
            %td.issue_link
              - if problem.app.issue_tracker_configured? && problem.issue_link.present? && problem.issue_link != 'pending'
                %a{ :class => 'btn btn-info', :href => problem.issue_link, :target => '_blank'}
                  %i{ :class => 'icon-share icon-white'}

          %td.resolve
            -if problem.unresolved?
              %a{ :class => 'resolve btn btn-primary', :href => resolve_app_err_path(problem.app, problem), :data => { :method => 'put' } }
                %i{ :class => 'icon-thumbs-up icon-white'}
                Resolve
            -else
              %a{ :class => 'resolve btn btn-warning', :href => unresolve_app_err_path(problem.app, problem), :data => { :method => 'put' } }
                %i{ :class => 'icon-thumbs-down icon-white'}
                Unresolve


      - if errs.none?
        %tr
          %td{:colspan => (any_issue_links ? 8 : 7)}
            %em No errs here

  = paginate errs

  .btn-toolbar
    .btn-group
      %button{ :id => 'merge_errs', :class => 'app-err-button btn btn-primary', :name => 'commit', :data => { :action => merge_several_errs_path} }
        %i{ :class => 'icon-random icon-white'}
        Merge

      %button{ :id => 'unmerge_errs', :class => 'app-err-button btn btn-primary', :name => 'commit', :data => { :action => unmerge_several_errs_path} }
        %i{ :class => 'icon-magnet icon-white'}
        Unmerge

      %button{ :id => 'resolve_errs', :class => 'app-err-button btn btn-success', :name => 'commit', :data => { :action => resolve_several_errs_path} }
        %i{ :class => 'icon-thumbs-up icon-white'}
        Mark Resolved

      %button{ :id => 'unresolve_errs', :class => 'app-err-button btn btn-warning', :name => 'commit', :data => { :action => unresolve_several_errs_path} }
        %i{ :class => 'icon-thumbs-down icon-white'}
        Mark Unresolved

      %a{ :class => 'btn btn-danger', :href => '#errs-delete-confirm-all', :data => { :toggle => 'modal' } }
        %i{ :class => 'icon-trash icon-white' }
        Delete


= render 'modals/errs_delete_all_confirm'