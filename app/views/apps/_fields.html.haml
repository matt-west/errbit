= errors_for @app

.row-fluid
  .span8
    %fieldset
      %legend App Details

      %div.control-group
        = f.label :name
        %div.controls
          = f.text_field :name, :placeholder => 'Application Name'
          %p.help-block Enter a name for your application

      %div.control-group
        = f.label :github_repo
        %div.controls
          = f.text_field :github_repo, :placeholder => "https://github.com/fac/errbit"
          %p.help-block Enter the location of the repository on Github

    %fieldset.notifications
      %legend Notifications
      %div.control-group.well
        %div.controls
          %label.checkbox{:for => 'notify_on_errs'}
            = f.check_box :notify_on_errs, 'data-show-when-checked' => '.email_at_notices_nested'
            Notify on errors

          - if Errbit::Config.per_app_email_at_notices
            %div.control-group{:style => f.object.notify_on_errs ? '' : 'display: none;'}
              %div.controls
                %span{ :class => 'help-inline field-helpertext'} Send a notification every
                = f.text_field :email_at_notices, :value => f.object.email_at_notices.join(", ")
                %span{ :class => 'help-inline field-helpertext'} times an error occurs (comma separated).

          %label.checkbox{ :for => 'notify_on_deploys' }
            = f.check_box :notify_on_deploys
            Notify on deploys

          %label.checkbox{ :for => 'resolve_errs_on_deploy' }
            = f.check_box :resolve_errs_on_deploy
            Resolve errors on deploy

          %label.checkbox{ :for => 'notify_all_users' }
            = f.check_box :notify_all_users
            Send notifications to all users


  .span4
    %fieldset.watchers.nested-wrapper{:style => f.object.notify_all_users ? 'display: none;' : ''}
      %legend Watchers
      = f.fields_for :watchers do |w|
        %div.watcher.nested.well
          %div.control-group
            %div.choose.controls.form-inline.row-fluid
              %label.radio.span2{ :for => label_for_attr(w, 'watcher_type_user') }
                = w.radio_button :watcher_type, :user
                User
              %label.radio.span2{ :for => label_for_attr(w, 'watcher_type_email') }
                = w.radio_button :watcher_type, :email
                Email Address

          %div.watcher_params.user{:class => w.object.email.blank? ? 'chosen' : nil}
            = w.select :user_id, User.all.map{|u| [u.name,u.id.to_s]}, :include_blank => '-- Select a User --'
          %div.watcher_params.email{:class => w.object.email.present? ? 'chosen' : nil}
            = w.text_field :email